{
  "name": "@headspinio/appium-roku-driver",
  "description": "Appium driver for Roku channels",
  "keywords": [
    "appium",
    "roku"
  ],
  "version": "2.0.1",
  "author": "appium",
  "license": "Apache-2.0",
  "repository": {
    "type": "git",
    "url": "https://github.com/headspinio/appium-roku-driver.git"
  },
  "bugs": {
    "url": "https://github.com/headspinio/appium-roku-driver/issues"
  },
  "appium": {
    "driverName": "roku",
    "automationName": "Roku",
    "platformNames": [
      "Roku"
    ],
    "mainClass": "RokuDriver"
  },
  "main": "./index.js",
  "bin": {
    "appium-roku-remote": "./build/lib/remote.js"
  },
  "directories": {
    "lib": "lib"
  },
  "files": [
    "index.js",
    "lib",
    "build/index.js",
    "build/lib",
    "LICENSE",
    "README.md"
  ],
  "dependencies": {
    "@babel/runtime": "^7.0.0",
    "asyncbox": "^2.3.1",
    "axios": "^0.27.2",
    "blessed": "^0.1.81",
    "bluebird": "^3.1.1",
    "jimp": "^0.16.1",
    "js2xmlparser": "^4.0.1",
    "lodash": "^4.17.21",
    "lru-cache": "^7.10.1",
    "request": "^2.88.2",
    "request-promise": "^4.2.5",
    "source-map-support": "^0.5.5",
    "xml2js": "^0.4.23",
    "xmldom": "^0.6.0",
    "xpath": "0.0.32",
    "yargs": "^17.1.1"
  },
  "devDependencies": {
    "@appium/gulp-plugins": "^7.0.2",
    "appium": "^2.0.0-beta.38",
    "appium-roku-driver": "file:.",
    "chai": "^4.1.2",
    "chai-as-promised": "^7.1.1",
    "eslint-config-appium": "^4.0.1",
    "gulp": "^4.0.0",
    "mocha": "^10.0.0",
    "pre-commit": "^1.1.3",
    "webdriverio": "^7.10.0"
  },
  "peerDependencies": {
    "appium": "^2.0.0-beta.35"
  },
  "scripts": {
    "clean": "rm -rf node_modules && rm -f package-lock.json && npm install",
    "build": "gulp transpile",
    "mocha": "mocha",
    "prepare": "gulp prepublish",
    "test": "gulp once",
    "test:e2e": "_FORCE_LOGS=1 gulp e2e-test",
    "watch": "gulp watch",
    "coverage": "gulp coveralls",
    "precommit-msg": "echo 'Pre-commit checks...' && exit 0",
    "precommit-test": "REPORTER=dot gulp once",
    "lint": "gulp lint",
    "lint:fix": "gulp eslint --fix"
  },
  "pre-commit": [
    "precommit-msg",
    "precommit-test"
  ],
  "publishConfig": {
    "access": "public"
  }
}
